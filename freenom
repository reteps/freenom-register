#!/usr/bin/env python3


import requests, sys
from bs4 import BeautifulSoup
class FreenomError(Exception):
    pass
class Freenom(object):
    def __init__(self, email, password):
        self.email = email
        self.password = password
        self.session = requests.Session()
    def login(self):
        url = "https://my.freenom.com/dologin.php"
        payload = {'token': self.get_token('https://my.freenom.com/clientarea.php'),
                    'username': self.email,
                    'password': self.password}
        r = self.session.post(url, payload, headers={'Host': 'my.freenom.com', 'Referer': 'https://my.freenom.com/clientarea.php'})
        if r.status_code != 200:
            raise FreenomError(f"Could not reach {url}")
        elif 'Hello' not in r.text:
            raise FreenomError("Email or password is incorrect.")
    def is_available(self, domain):
        payload = {
                'domain':domain.split(".")[0],
                'tld':domain.split(".")[1]
        }
        r = self.session.post("https://my.freenom.com/includes/domains/fn-available.php", payload, headers={'Host': 'my.freenom.com', 'Referer': 'https://my.freenom.com/domains.php'}).json()['top_domain']
        return r["status"] == "AVAILABLE" and r["type"] == "FREE"
    def get_token(self, url):
        return self.session.get(url).text.split('name="token" value="',2)[1].split('"',1)[0]
    def get_domain(self, domain):
        url = "https://my.freenom.com/includes/domains/confdomain-update.php"
        if not self.is_available(domain):
            raise FreenomError("Domain is not available.")
        payload = {
                'domain': domain,
                'period': '12M'
        }
        r = self.session.post(url, payload, headers={'Host': 'my.freenom.com', 'Referer': 'https://my.freenom.com/cart.php?a=confdomains'}).json()
        if r["status"] != "OK":
            raise FreenomError("Something went wrong.")
        
        token = self.get_token("https://my.freenom.com/cart.php?a=confdomains")
        periodName = domain.split(".")[0] + "_" + domain.split(".")[1] + "_period"
        payload = {
                "token": token,
                "update": "true",
                periodName: "12M",
                "idprotection[0]":"on",
                "domainns1":"ns01.freenom.com",
                "domainns2":"ns02.freenom.com",
                "domainns3":"ns03.freenom.com",
                "domainns4":"ns04.freenom.com",
                "domainns5":""
        }
        input("this section may get you banned. Be warned.")
        r = self.session.post("https://my.freenom.com/cart.php?a=confdomains", payload, headers={'Host': 'my.freenom.com', 'Referer': 'https://my.freenom.com/cart.php?a=confdomains'})
        soup = BeautifulSoup(r.text,"lxml")
        form = soup.find("form", {"id":"mainfrm"}).findAll("input")
        skipValues = ["accepttos","fpbb","iobb"]
        payload = {
                "accepttos": "on",
                "fpbb":"0400AY1YRP7DGIANf94lis1ztioT9A1DShgATTGvKpCeZlRwmEZ+z1fPZRcJnGLiky0W1+WpmjdizJJlHVB6chrI7oZc+cJURcFiYtBUbpa7l0FdSDvFsQ9SoXAEKkoBeycPTld6LUiJXX9c8V1ZIWK++ykzCGBlggcGImwI4pTgqhaBe3QFuxfZaUxFXRiZcQcAnPGnG3CqgLln+4KLswTyWhDAstLN4US5V97h50/5jKuksZ+gFcc8aSdlq6Ngoi5gQITTv1Udki2WMCVbBcdxP93dn6ROnupX8ydRdFuSL63vUSbJ+Ltz3R3+1lLYqHZEvPhjyQaPG3g8vtGCfhe9sg7T6v45cktLzdfxLylYBibsEVBWO8XQIqpa9NvP9z6vZG9jVzQYzT+kDxWt9wpgAUBHbtl2L6+OpyBbY5IHHW2IrukwLD3N1OUeiX6M9jR6r5XHrcXp6A2ig+YdKzGIJBDAstLN4US59PE4fRZTRwzCQai4/k8/K9DvxPQAaf/XLD4mV3TQqnyuMfbDwuRupFMpzu5bzRoTBqVHq2r3awuh/3nRbiSbHgfJ/zck+QEC91vDzq9GxxVn+WvCwoViHULgwe4ejOQ9IF9wOHABPWNq9K72wUVXedwTidneZ5WeqDQRJDWdY1eS0ikV7ewoMthejcFMJfaG0h9BYE8yDTlNMa8qkJ5mVHCYRn7PV89lFwmcYuKTLRbrGEW9zh85nee6doaAkvg88sQyiQagYnHOxQaAj6oFp9TxcGl3WwOBYDvethm0ixV1runB8PvNa5VPfVKB9sZJFnByNpqhsLzOBP1KC0Y6VQVd5JG+xf4PPRirNuv5AeJlFCwSCpg6ihLehB7yooe5X6t2xsBNqMDIx5G6nzZ9jXlFnBT3M8OkdpLBWppZ1Q1X9ZRAwWJj5kgeo+IpZLrVuZmcL034xXuFkR2vuwB6raHGv/wMldp/pbJtKxGFt63mx2vNwg2QelphjtXbnyydIHmabRYot5txeMW7J2jnJ5XpGTfpwwyCNKRgykYNiDEHc1b6+eli0Za3c3jVldoE",
                "iobb":"",
        }
        for value in form:
            if value.get("name") in skipValues or value.get("name") == None:
                continue
            payload[value.get("name")] = value.get("value")
        for key in payload:
            print(key, payload[key])

        r = self.session.post("https://my.freenom.com/cart.php?a=checkout", payload, headers={'Host': 'my.freenom.com', 'Referer': 'https://my.freenom.com/cart.php?a=checkout'})
        print(r.text)
if len(sys.argv) != 4:
    print("usage: freenom EMAIL PASSWORD DOMAIN")
x = Freenom(sys.argv[1],sys.argv[2])
x.login()
x.get_domain(sys.argv[3])
